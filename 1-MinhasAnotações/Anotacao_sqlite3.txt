# Aula 207 ============================ importação sqlite3 ======================================
import sqlite3

###    "CTRL + D "    Copiar uma linha automaticamente



path = r'C:\dev\excript\app_comerciais_kivy\aulas\SQLite3'  # cria uma variavel com o path onde vai ser criado o banco de dados sqlite3
conn = sqlite3.connect(path+r'\teste.db')                  # cria uma estancia da classe connect para cria o banco de dados



# Aula 207 4:46 ===================== pronpet de comando sqlite3 ================================
#Va até o path da pasta que contém o banco de dados
sqlite3 teste.db

.exit     # para fechar

#Comentario SQL ==>  --
#Comentario SQL Varias linhas ==> /* */     Ex: /* Eo comentario
                                            Proxima linha */

# ================================ COMANDOS SQL ================================================

UNIQUE = Para não repetir valores incerido no base de dados



# Aula 216  ======================== CRIAR UMA TABELA ============================================

CREATE TABLE IF NOT EXISTS Eo_nome_da_tabela();  => "cria uma tabela"
INSERT INTO  => "Pede para inserir algo na tabela"
VALUES  => "Insere colunas e valores "
    EX: INSERT INTO nome_da_tabela(nome)   #"Aqui tipos de colunas"
        VALUES ("pedro");      #"Valores da colunas "


# Aula 218 ======================== COMADO SELECT ============================================

SELECT colunas      #"Quer dizer selecione todas colunas"
FROM tabelas;       #   "De uma determinada tabela"

# Aula 219 ======================== DROP excluir uma tabela ====================================

DROP TABLE Nometabela;


Aula 223 ========================== AUTOINCREMENT ============================================

AUTOINCREMENT => É PARA incrementar um numero a mais na coluna da chave primaria "PRIMARY KEY"
# Que devera ser usado com o tipo da coluna como "INTERGER" e não "INT"

EX:
     CREATE TABLE agenda
    (
        ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
        NOME TEXT NOT NULL
    );

Aula 224 === Auteração de tabelas ======== ALTER TABLE =======================================

RENAME  =>  # Para renomear o nome da tabela
ADD COLUMN  =>  # Para adicionar uma coluna a tabela

EX:
    AlTER TABLE agenda
    RENAME TO novo_nome;

Aula 226 ================================ WHERE  ============================================
WHERE =>  # Significa "onde" para selecionar a linha da tabela especifica

EX.:
    SELECT * FROM agenda
    WHERE coluna == 101 OR coluna == 103;   # Ira retornar somente as linha pedidas
                                    # pode ser filtrado texto, int....etc

Aula 227 ==== Ordenação ===============  ORDER BY  ==============================================
ORDER BY => # para ordenar a posição emque as colunas serão mostrada
ASC  =>  #Para dizer que é ascedente
DESC  =>  #Para dizer que é descedente

EX.:
    SELECT * FROM agenda
    ORDER BY coluna DESC;

Aula 228 ===== Limite =====================  LIMIT  ============================================
LIMIT  =>  # Limite de registro retornados

EX.:
    SELECT * FROM agenda
    ORDER BY coluna DESC
    LIMIT 3;

Aula 229 #AUTERAÇÃO ====================== UPDATE  =============================================
EX.:
    UPDATE agenda
    SET idade = 35        # SET a coluna IDADE que recebera o valor de "35"
    WHERE id = 3     # pegando a coluna "ID" com o numero da linha "3"

Aula 230  ================================  DELETE e DROP =============================================
DELETE  => # Para excluir registro de uma ta bela
DROP TABLE => # Para excluir uma tabela

EX.: DROP TABLE agenda # excluil uma tabela

EX.:
    DELETE FROM agenda  # agenda é a tabela
    WHERE id = 103;  # O "id" é a coluna que definimo como "PRIMARY KEY" com o valor 103

EX.: # Aqui para excluirt todos registros da tabela agenda
    DELETE FROM agenda

# =================================== DISTINCT ==============================================
DISTINCT  =>  # Não deixa retornar repetições

EX.:
    SELECT DISTINCT coluna1,coluna2
    FROM tabela;

# ================================== TOP ===========================================================
TOP => Retorna a quantidade de linhas especificadas
EX.:
    SELECT TOP 10 *   # retorna 10 linhas de todas colunas
    FROM tabela

# ================================= BETWEEN =====================================================
BETWEEN => É usado para encontrar valor entre um valor minimu e valor máximo
EX.:
    SELECT *
    FROM tabela
    WHERE idade BETWEEN 18 AND 40;
        # ou pode usar "NOT BETWEEN"
    #WHERE idada NOT BETWEEN 18 AND 40

# =================================  IN  ========================================================
IN => # Faz a mesma funcionalidade do where
# Mais ou inves de escrever assim
    EX.:
        SELECT * FROM agenda
        WHERE coluna == 101 OR coluna == 103;   # Ira retornar somente as linha pedidas
# Fassa assim
    EX.:
        SELECT * FROM agenda
        WHERE coluna IN (101, 103, 109);   # Ira retornar somente as linha pedidas

# ================================= LIKE =======================================================
LIKE => # Para encotrar um nome usando somente algumas letras
EX.:
    SELECT * FROM TABELA
    WHERE NOME LIKE 'be%' # E vai devolver todos nomes que começa com a letra be
                           # O sinal de porcentagen define o começo meio e fim

==================================  SQLite3 & Python ============================================
# COMANDOS ======

.cursor()   => Para comessar um cursor
.execult()  => Para realizar os comando do banco de dados
.commit()   => Para salvar os registro no banco de dados
.fetchall() => Para mostra tudo do banco de dados
.close()    => Para fechar a conecção com o banco de dados

EX.:
import sqlite3    # Importando "sqlite3"

conn = sqlite3.connect('PASTA.db')      # Criando uma conecção com a base de dados se não existir irá criar

cursor = conn.cursor()   # Criamos um cursor, aqui fasemos todos os comando "SQL" Na manipulação do banco de dados

# ============== Criamos uma tabela "cadastro" e inserimos as colunas com o comando "execulte" ===============#
cursor.execute("CREATE TABLE cadastro(CPF TEXT PRIMARY KEY NOT NULL, NOME TEXT NOT NULL, ENDEREÇO TEXT NOT NULL, NUMER INT)")

# ============================ Inserindo registro na tabela =========#
cursor.execute("INSERT INTO cadastro VALUES('4567-7','João','Queiroz','103')")

conn.commit()   # Aqui damos um "commit" para salvar o registro

text = cursor.execute("SELECT * FROM cadastro")  # E selecionamos tudo da tabela cadastro

# E mostramos na tela com o comando  "fetchall()" para pegar tudo..
for linha in text.fetchall():
    print(linha)

#==============================  Variaveis no banco de dados  ===============================
EX.:
CPF = '1234-4'
nome = 'pedro'
endereço = 'Queiros filho'
numero = 231                # Os inteiros tenq ser passado com uma string

cursor.execute("INSERT INTO cadastro VALUES('"+CPF+"','"+nome+"','"+endereço+"','"+str(numero)+"')")